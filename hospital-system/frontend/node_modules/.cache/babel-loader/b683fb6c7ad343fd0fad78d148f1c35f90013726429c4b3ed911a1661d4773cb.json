{"ast":null,"code":"const API_BASE_URL = 'http://localhost:5000';\nexport const auth = {\n  login: async (username, password) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        }),\n        credentials: 'include'\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Login failed');\n      }\n      return data;\n    } catch (error) {\n      throw new Error(error.message || 'Network error occurred');\n    }\n  },\n  logout: async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/auth/logout`, {\n        method: 'POST',\n        credentials: 'include'\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Logout failed');\n      }\n      return data;\n    } catch (error) {\n      throw new Error(error.message || 'Network error occurred');\n    }\n  },\n  checkStatus: async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/auth/status`, {\n        method: 'GET',\n        credentials: 'include'\n      });\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      return {\n        authenticated: false\n      };\n    }\n  }\n};","map":{"version":3,"names":["API_BASE_URL","auth","login","username","password","response","fetch","method","headers","body","JSON","stringify","credentials","data","json","ok","Error","message","error","logout","checkStatus","authenticated"],"sources":["/home/ndegwa/Kenyatta/hospital-system/frontend/src/services/auth.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:5000';\n\nexport const auth = {\n  login: async (username, password) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/auth/login`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password }),\n        credentials: 'include'\n      });\n      \n      const data = await response.json();\n      \n      if (!response.ok) {\n        throw new Error(data.message || 'Login failed');\n      }\n      \n      return data;\n    } catch (error) {\n      throw new Error(error.message || 'Network error occurred');\n    }\n  },\n  \n  logout: async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/auth/logout`, {\n        method: 'POST',\n        credentials: 'include'\n      });\n      \n      const data = await response.json();\n      \n      if (!response.ok) {\n        throw new Error(data.message || 'Logout failed');\n      }\n      \n      return data;\n    } catch (error) {\n      throw new Error(error.message || 'Network error occurred');\n    }\n  },\n  \n  checkStatus: async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/auth/status`, {\n        method: 'GET',\n        credentials: 'include'\n      });\n      \n      const data = await response.json();\n      return data;\n    } catch (error) {\n      return { authenticated: false };\n    }\n  }\n};"],"mappings":"AAAA,MAAMA,YAAY,GAAG,uBAAuB;AAE5C,OAAO,MAAMC,IAAI,GAAG;EAClBC,KAAK,EAAE,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,YAAY,aAAa,EAAE;QACzDO,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAER,QAAQ;UAAEC;QAAS,CAAC,CAAC;QAC5CQ,WAAW,EAAE;MACf,CAAC,CAAC;MAEF,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAElC,IAAI,CAACT,QAAQ,CAACU,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,cAAc,CAAC;MACjD;MAEA,OAAOJ,IAAI;IACb,CAAC,CAAC,OAAOK,KAAK,EAAE;MACd,MAAM,IAAIF,KAAK,CAACE,KAAK,CAACD,OAAO,IAAI,wBAAwB,CAAC;IAC5D;EACF,CAAC;EAEDE,MAAM,EAAE,MAAAA,CAAA,KAAY;IAClB,IAAI;MACF,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,YAAY,cAAc,EAAE;QAC1DO,MAAM,EAAE,MAAM;QACdK,WAAW,EAAE;MACf,CAAC,CAAC;MAEF,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAElC,IAAI,CAACT,QAAQ,CAACU,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,eAAe,CAAC;MAClD;MAEA,OAAOJ,IAAI;IACb,CAAC,CAAC,OAAOK,KAAK,EAAE;MACd,MAAM,IAAIF,KAAK,CAACE,KAAK,CAACD,OAAO,IAAI,wBAAwB,CAAC;IAC5D;EACF,CAAC;EAEDG,WAAW,EAAE,MAAAA,CAAA,KAAY;IACvB,IAAI;MACF,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,YAAY,cAAc,EAAE;QAC1DO,MAAM,EAAE,KAAK;QACbK,WAAW,EAAE;MACf,CAAC,CAAC;MAEF,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACb,CAAC,CAAC,OAAOK,KAAK,EAAE;MACd,OAAO;QAAEG,aAAa,EAAE;MAAM,CAAC;IACjC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}